{"ast":null,"code":"var _jsxFileName = \"/home/mtech/Documents/react_assignment/src/components/Users/FetchUsers.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport FilteredUsers from \"./FilteredUsers\";\nimport User from \"./User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchUsers = props => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const {\n    url,\n    inputValue,\n    filterValue\n  } = props;\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchUsers = async () => {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedUsers = [];\n\n      for (let key in data[\"items\"]) {\n        const userRes = await fetch(data[\"items\"][key].url);\n\n        if (!userRes.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const userdata = await userRes.json(); //console.log(userdata);\n\n        loadedUsers.push({\n          profilepic: userdata.avatar_url,\n          username: userdata.login,\n          name: userdata.name,\n          bio: userdata.bio,\n          location: userdata.location,\n          mail: userdata.email,\n          url: userdata.html_url\n        });\n      }\n\n      setUsers(loadedUsers);\n      console.log(loadedUsers);\n      setIsLoading(false);\n    };\n\n    fetchUsers().catch(error => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, [locationValue]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      let filteredUsersArray = [];\n      filteredUsersArray = users.filter(user => user.username.toLowerCase().includes(filterValue.toLowerCase()));\n      setFilteredUsers(filteredUsersArray);\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [filterValue, inputValue]);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: \"Something went wrong!\",\n      message: \"Try Again later!\",\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n  const usersList = users.map(user => /*#__PURE__*/_jsxDEV(User, {\n    profilepic: user.profilepic,\n    username: user.username,\n    name: user.name,\n    bio: user.bio,\n    location: user.location,\n    mail: user.mail,\n    url: user.url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this));\n  const filteredUsersList = filteredUsers.map(user => /*#__PURE__*/_jsxDEV(FilteredUsers, {\n    profilepic: user.profilepic,\n    username: user.username,\n    name: user.name,\n    bio: user.bio,\n    location: user.location,\n    mail: user.mail,\n    url: user.url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filterValue.length !== 0 ? filteredUsersList : usersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FetchUsers, \"SYxQ7OWRl9j1UyG3rCtfokrh1go=\");\n\n_c = FetchUsers;\nexport default FetchUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchUsers\");","map":{"version":3,"sources":["/home/mtech/Documents/react_assignment/src/components/Users/FetchUsers.js"],"names":["useEffect","useState","ErrorModal","LoadingSpinner","FilteredUsers","User","FetchUsers","props","users","setUsers","isLoading","setIsLoading","error","setError","filteredUsers","setFilteredUsers","url","inputValue","filterValue","fetchUsers","response","fetch","ok","Error","data","json","console","log","loadedUsers","key","userRes","userdata","push","profilepic","avatar_url","username","login","name","bio","location","mail","email","html_url","catch","message","locationValue","timer","setTimeout","filteredUsersArray","filter","user","toLowerCase","includes","clearTimeout","errorHandler","usersList","map","filteredUsersList","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport FilteredUsers from \"./FilteredUsers\";\nimport User from \"./User\";\n\nconst FetchUsers = (props) => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  const { url, inputValue, filterValue } = props;\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchUsers = async () => {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n\n      const loadedUsers = [];\n\n      for (let key in data[\"items\"]) {\n        const userRes = await fetch(data[\"items\"][key].url);\n        if (!userRes.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const userdata = await userRes.json();\n        //console.log(userdata);\n\n        loadedUsers.push({\n          profilepic: userdata.avatar_url,\n          username: userdata.login,\n          name: userdata.name,\n          bio: userdata.bio,\n          location: userdata.location,\n          mail: userdata.email,\n          url: userdata.html_url,\n        });\n      }\n\n      setUsers(loadedUsers);\n      console.log(loadedUsers);\n      setIsLoading(false);\n    };\n    fetchUsers().catch((error) => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, [locationValue]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      let filteredUsersArray = [];\n\n      filteredUsersArray = users.filter((user) =>\n        user.username.toLowerCase().includes(filterValue.toLowerCase())\n      );\n      setFilteredUsers(filteredUsersArray);\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [filterValue, inputValue]);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  if (isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  if (error) {\n    return (\n      <ErrorModal\n        title=\"Something went wrong!\"\n        message=\"Try Again later!\"\n        onConfirm={errorHandler}\n      />\n    );\n  }\n\n  const usersList = users.map((user) => (\n    <User\n      profilepic={user.profilepic}\n      username={user.username}\n      name={user.name}\n      bio={user.bio}\n      location={user.location}\n      mail={user.mail}\n      url={user.url}\n    />\n  ));\n\n  const filteredUsersList = filteredUsers.map((user) => (\n    <FilteredUsers\n      profilepic={user.profilepic}\n      username={user.username}\n      name={user.name}\n      bio={user.bio}\n      location={user.location}\n      mail={user.mail}\n      url={user.url}\n    />\n  ));\n\n  return (\n    <div>\n      <ul>{filterValue.length !== 0 ? filteredUsersList : usersList}</ul>\n    </div>\n  );\n};\n\nexport default FetchUsers;\n"]},"metadata":{},"sourceType":"module"}